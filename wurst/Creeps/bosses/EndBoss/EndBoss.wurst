package EndBoss
import TowerBlockade
import DestroyerSummoner
import Tower
import Boss
import EndGame
import ClosureForGroups
import UnitSpawnSystem

constant ENDBOSS_ID = 'n00P'

constant m = new Music('0000', "Sound\\Music\\mp3Music\\Doom.mp3")
constant stageTwoPercentage = .33
constant stageThreePercentage = .10

public EndBossFight currentEndBossFight

public class EndBoss extends Boss
	int stage = 1
	var damageCount = GetRandomReal(-1500, 500)
	EndBossFight bossFight

	construct(vec3 pos, int typId, int bounty, vec2 target, EndBossFight bossFight)
		super(pos, typId, bounty, target)
		this.bossFight = bossFight

		EventListener.add(actor, EVENT_UNIT_DAMAGED) ->
			damageCount += GetEventDamage()
			if damageCount > 5000
				damageCount -= 5000 + GetRandomReal(-500, 500)
				onEnbossDamage()

	override function update()
		super.update()
		let percentage = actor.getHP() / actor.getMaxHP()
		if stage == 1 and percentage < stageTwoPercentage
			stage = 2
		if stage == 2 and percentage < stageThreePercentage
			stage = 3

	static function onEnbossDamage()
		let boss = GetExpiredTimer().getData() castTo EndBoss
		boss.castAbility()

	function castAbility()
		let abil = GetRandomInt(0, 1)
		//switch abil
			//case 0
				//doAfter(GetRandomReal(0, 8)) ->
					//tryCastTowerBlockade()
//			case 1
//				doAfter(GetRandomReal(0, 8)) ->
//					castDestroyerSummoner()

	function tryCastTowerBlockade()
		forUnitsInRangeCounted(pos.toVec2(), 3072., 2) u ->
			if IsUnitType(u, UNIT_TYPE_STRUCTURE) and u.isAlive() and u.getEntity() instanceof Tower and pDatas[u.getOwner().getId()] != null
				let tower = u.getEntity() castTo Tower
				var hasBuff = false
				if tower.hasBuffs()
					for bff in tower.getBuffs()
						if bff instanceof TowerBlockadeBuff
							hasBuff = true
				if not hasBuff
					castTowerBlockade(tower)

	function castTowerBlockade(Tower tower)
		actor.setAnimation("spell")
		//new TowerBlockadeMissile(pos, owner, tower)
		doAfter(BLOCKADE_MISSILE_TIME) ->
			new TowerBlockadeBuff(tower)

	function castDestroyerSummoner()
		currentEndBossFight.createDestroyerSummoner(this)

	override function onDeath()
		super.onDeath()
		bossFight.onBossDeath(this)


public class EndBossFight
	let bosses = new LinkedList<EndBoss>()
	FinalBossSummoning destroyerSummoning

	boolean summoningComplete = false

	construct()
		PlayMusic(m.path)
		print("|cffE62121 Prepare for your end!")
		for j = 0 to startPosCount
			bosses.add(new EndBoss(spawnRects[j].randomPoint().toVec3(), ENDBOSS_ID, 175, middle, this))

	function createDestroyerSummoner(EndBoss castingBoss)
		if not summoningComplete
			let summoner = new DestroyerSummoner(castingBoss.getPos())
			destroyerSummoning.addSummoner(summoner)

	function endDestroyerSummoning()
		if not summoningComplete
			summoningComplete = true
			destroy destroyerSummoning

	function onBossDeath(EndBoss b)
		bosses.remove(b)
		if bosses.size() == 0
			destroy this

	ondestroy
		endDestroyerSummoning()
		destroy bosses
		onVictory()

public function startEndBoss()
	printTimed("    |cffFFC519Beat the final boss to win!", 25)
	stopSpawn()
	currentEndBossFight = new EndBossFight()

public function onVictory()
	printTimed("|cffFFCC00>> |cffFFA53ACongratulations, you won!|r\n        |cff7B7B7BThe game will end in 20 seconds.", 25)
	winGame()
	doAfter(20) ->
		for pd in allPlayers
			CustomVictoryBJ(pd.p, true, false)

class Music
	int spellid
	string path
	real duration
	string name

	construct(int id, string path)
		this.spellid = id
		this.path = path
		this.duration = GetSoundFileDuration(path) / 1000.
		this.name = path.substring(path.lastIndexOf("\\") + 1, path.lastIndexOf("."))
