package TowerBlockade
import Tower
import Projectile
import Creep
import Assets
import public Buff
import TextTagEntity

constant blockadeBuff = compiletime(createDummyBuffObject("Blockade", "This tower cannot attack until the blockading unit is killed.", Icons.bTNEnsnare))
constant BLOCKADE_DURATION = 120.
public constant BLOCKADE_MISSILE_TIME = 5.
constant BLOCKADE_UNIT = 'u017'

public class TowerBlockadeMissile extends Projectile
	real heal
	UnitEntity target

	construct(vec3 pos, player owner, UnitEntity target)
		super(pos, 0., owner, pos.angleTo2d(target.getPos().add(0, 0, 30.)), Abilities.deathCoilMissile)
		let speed = pos.distanceTo(target.getPos()) / (BLOCKADE_MISSILE_TIME * ANIMATION_PERIOD)
		this.setTarget(target.getPos().add(0, 0, 64), speed)
		this.setTimed(BLOCKADE_MISSILE_TIME)
		fx.eff.setColor(colorA(215, 255, 215, 168))

	override function update()
		super.update()


public class TowerBlockadeBuff extends Buff
	BlockadeShip blockadeUnit
	effect blockadeEffect

	construct(Tower target)
		super(BLOCKADE_DURATION, blockadeBuff)
		new TextTagEntity(target.getPos(), vec3(GetRandomReal(-1, 1),0, GetRandomReal(6,8)), "Blockaded!", 8, 1., colorA(145, 80, 12, 255))
		this.apply(target)

	override function apply(UnitEntity target)
		this.target = target
		if not target.hasBuffs()
			target.newBuffs()
		for bff in target.getBuffs()
			if bff.typeId == this.typeId
				bff.duration = duration
				this.target = null
				terminate()
				return
		let targetPos = target.getPos()
		blockadeUnit = new BlockadeShip(createUnit(CREEP_OWNER, BLOCKADE_UNIT, targetPos, angle(0)), this)
		blockadeEffect = addEffect(Abilities.howlTarget, targetPos)
		target.addBuff(this)
		target.actor.issueImmediateOrder("stop")
		(target castTo Tower).pause()
		refresh()

	override function terminate()
		blockadeEffect.destr()
		if blockadeUnit != null and blockadeUnit.actor.isAlive()
			destroy blockadeUnit
		super.terminate()


	ondestroy
		if target != null
			(target castTo Tower).unpause()
		if blockadeUnit != null
			blockadeUnit.remove()

class BlockadeShip extends UnitEntity
	TowerBlockadeBuff blockadeBuff

	construct(unit actor, TowerBlockadeBuff blockadeBuff)
		super(actor)
		this.blockadeBuff = blockadeBuff

		EventListener.add(actor, EVENT_PLAYER_UNIT_DEATH) ->
			let buffUnit = GetTriggerUnit().getEntity() castTo BlockadeShip
			if buffUnit != null
				buffUnit.terminateBuff()

	function terminateBuff()
		blockadeBuff.terminate()

	ondestroy
		if actor.isAlive()
			blockadeBuff.terminate()
